<!DOCTYPE html>
<html lang="en" dir="ltr">

  <%-include('../partials/head.ejs')%>

  <body>

    <div class="container">

      <form class="newForm needs-validation" action="/admins" method="POST" novalidate/>

        <fieldset class="adminSignupFieldset">

          <legend>Welcome to the Team!</legend>

            <div class="row mb-4">
              <div class="col">
                <label class="adminSignupLabel" for="email">Email</label>
                <input class="form-control" type="email" name="email" required unique />
                <div class="invalid-feedback">
                  invalid email address
                </div>
                <div class="valid-feedback">
                  looking good :)
                </div>
              </div>
            </div>

            <div class="row mt-4 mb-4">
              <div class="col">
                <label class="adminSignupLabel" for="username">Username</label>
                <input class="form-control" type="text" name="username"
                minLength="5" maxLength="20" required unique/>
                <small class="text-muted">*case sensitive</small>
                <div class="invalid-feedback">
                  username must be between 5-20 characters
                </div>
                <div class="valid-feedback">
                  you're a rockstar ‚òÜ
                </div>
              </div>
            </div>

            <div class="row row mt-4 mb-4">
              <div class="col">
                <label class="adminSignupLabel" for="password">Password</label>
                <input class="form-control" type="password" name="password"   pattern="(?=.*\d)(?=.*[a-z])(?=.*[!@#$*%^])(?=.*[A-Z]).{8,}" required />
                <div class="invalid-feedback">
                  password must be at least 8 characters, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character(!@#$*%^)
                </div>
                <div class="valid-feedback">
                  word bird üê¶
                </div>
              </div>
            </div>

            <div class="adminSignup">
              <input class="btn btn-primary adminSignupBtn" type="submit" value="Register" />
            </div>

            <div class="backButton">
              <a class="btn btn-outline-secondary"href="/">Back</a>
            </div>

        </fieldset>

        <script type="text/javascript">

          // finding all forms with a class of need-validation
          const forms = document.querySelectorAll('.needs-validation')

          // slice method can also be called to convert Array-like objects/collections to a new Array.
          // call method calls a function with a given this value and arguments provided individually.
          // call() provides a new value of this to the function/method. With call(), you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.
          // forEach() method executes a provided function once for each array element.
          Array.prototype.slice.call(forms).forEach((form) => {

            form.addEventListener('submit', (event) => {
              // on submit, do this
              if (!form.checkValidity()) {
                // if the form is not valid, prevent default of submit, which would redirect/refresh.
                event.preventDefault()
                // event.stopPropagation()
              }

              // if form is valid, add the class was validated and submit the form.
              form.classList.add('was-validated')
            })
          })
        </script>

      </form>

    </div>

  </body>
</html>
